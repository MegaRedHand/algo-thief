@startuml

title "Caso de uso 2 de la entrega 2"

participant ":Testcase" as testcase
participant "algothief:Algothief" as algothief
participant "cronometro\n:Cronometro" as cron
participant "pistaBanco:Facil" as pistaBanco
participant "pistaBiblioteca:Facil" as pistaBiblioteca
participant "escenario:Escenario" as escenario
participant ":Policia" as policia
participant "fecha:LocalDateTime" as fecha


activate testcase
testcase -> algothief++: visitar("Banco de Montreal")
    algothief -> escenario++: detectiveVisitar("Banco de Montreal")
        escenario -> policia++: visitar("Banco de Montreal")
            return pistaBanco
        return pistaBanco
    deactivate algothief



testcase -> algothief++: pistaMasReciente()
    algothief -> pistaBanco++: descripcion()
        return descripcionPistaBanco
    return descripcionPistaBanco


testcase -> algothief++: visitar("Biblioteca de Montreal")
    algothief -> escenario++: detectiveVisitar("Biblioteca de Montreal")
        escenario -> policia++: visitar("Biblioteca de Montreal")
            return pistaBiblioteca
        return pistaBiblioteca
    deactivate algothief


testcase -> algothief++: pistaMasReciente()
    algothief -> pistaBiblioteca++: descripcion()
        return descripcionPistaBiblioteca
    return descripcionPistaBiblioteca


testcase -> cron++: fechaActual()
    return fecha

testcase -> fecha++: getDayOfWeek()
    return diaDeLaSemana

testcase -> fecha++: getHour()
    return hora

testcase -> testcase++: assertEquals(descripcionEsperadaBanco, descripcionPistaBanco)
deactivate testcase

testcase -> testcase++: assertEquals(descripcionEsperadaBiblioteca, descripcionPistaBiblioteca)
deactivate testcase

testcase -> testcase++: assertEquals(lunes, diaDeLaSemana)
deactivate testcase

testcase -> testcase++: assertEquals(9, hora)
deactivate testcase

@enduml