@startuml

title "Caso de uso 2"

participant ":Testcase2" as testcase
participant "cronometro\n:Cronometro" as cron
participant ":Detective" as detective
participant "novato:Novato" as novato
participant "pistaBanco\n:Facil" as pistaBanco
participant "pistaBiblioteca\n:Facil" as pistaBiblioteca
participant "banco:Edificio" as banco
participant "biblioteca\n:Edificio" as biblioteca
participant "montreal:Ciudad" as montreal

activate testcase
create cron
testcase ->> cron: <<create>>\n Cronometro()
create novato
testcase ->> novato: <<create>>\n Novato()
create pistaBanco
testcase ->> pistaBanco: <<create>>\n Facil("esta es la pista del banco")
create pistaBiblioteca
testcase ->> pistaBiblioteca: <<create>>\n Facil("esta es la pista de la biblioteca")
create banco
testcase ->> banco: <<create>>\n Edificio("Banco Nacional", pistaBanco)
create biblioteca
testcase ->> biblioteca: <<create>>\n Edificio("Biblioteca de Montreal", pistaBiblioteca)
create montreal
testcase ->> montreal: <<create>>\n Ciudad("Montreal", banco, biblioteca)
create detective
testcase ->> detective: <<create>>\n Detective(cronometro, montreal, novato)

testcase -> detective: visitar(banco)
    activate detective
    return pistaDevueltaBanco

testcase -> detective: visitar(biblioteca)
    activate detective
    return pistaDevueltaBiblioteca

testcase -> testcase: assertEquals(pistaBanco, pistaDevueltaBanco)
activate testcase
deactivate testcase

testcase -> testcase: assertEquals(pistaBiblioteca, pistaDevueltaBiblioteca)
activate testcase
deactivate testcase

testcase -> cron: tiempo()
    activate cron
    return horas

testcase -> testcase: assertEquals(2, horas)
activate testcase
deactivate testcase

@enduml