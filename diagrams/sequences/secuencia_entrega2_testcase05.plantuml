@startuml

title "Caso de uso 5 de la entrega 2"

participant ":Testcase" as testcase
participant ":Algothief" as algothief

participant ":Ladron" as ladron
participant ":Escenario" as escenario
participant "fuente\n:FuenteDeDatos" as fuente

participant "ladron1:Ladron" as ladron1
participant "ladron2:Ladron" as ladron2

activate testcase
testcase -> algothief: visitar("Banco Nacional")
testcase -> algothief: visitar("Banco Nacional")
testcase -> algothief: visitar("Biblioteca de Montreal")

testcase -> algothief: viajar("Mexico")
testcase -> algothief: visitar("Aeropuerto Nacional")

testcase -> algothief: cargarDatosSospechoso(descripcion)
    activate algothief
    algothief -> descripcion: agregar(descripcion)
    deactivate algothief

testcase -> algothief: buscarSospechosos()
    activate algothief
    algothief -> fuente: listaDeLadrones()
        activate fuente
        return ladrones
    algothief -> ladron1: descripcion()
            activate ladron1
            return descripcionLadron1
    algothief -> descripcion: coincideCon(descripcionLadron1)
        activate descripcion
        return true
    algothief -> ladron1: getNombre()
        activate ladron1
        return "Carmen SanDiego"
    algothief -> ladron2: descripcion()
        activate ladron2
        return descripcionLadron2
    algothief -> descripcion: coincideCon(descripcionLadron2)
        activate descripcion
        return false
    algothief -> escenario: emitirOrdenDeArresto("Carmen SanDiego")
    return "Carmen SanDiego"

testcase -> algothief: atraparSospechoso()
    activate algothief
    algothief -> escenario: detectiveAtraparLadron()
        activate escenario
        escenario -> ladron: seLlama("Carmen SanDiego")
            activate ladron
            return true
        return true
    deactivate algothief

testcase -> algothief: juegoAcabado()
    activate algothief
    return true

testcase -> algothief: juegoGanado()
    activate algothief
    return true

testcase -> testcase: assertTrue(juegoAcabado)
activate testcase
deactivate testcase

testcase -> testcase: assertTrue(juegoGanado)
activate testcase
deactivate testcase

@enduml
